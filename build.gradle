apply plugin: 'java'

sourceCompatibility = 1.8
version = '0.3'

configurations {
    moreLibs
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/java')
    }
    functionalTest {
        java.srcDir file('src/functionalTest/java')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
check.dependsOn integrationTest

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}
check.dependsOn functionalTest

dependencies {
    compile 'org.apache.tika:tika-core:1.5'
    compile 'org.apache.tika:tika-parsers:1.5'
    compile 'com.lowagie:itext:4.2.1'
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-access:1.1.2'
    compile 'com.google.code.gson:gson:2.2.4'
    compileJava.options.encoding = 'UTF-8'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'httpunit:httpunit:1.7'
    testCompile 'rhino:js:1.6R5'
    testCompile 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0'
    integrationTestCompile sourceSets.main.output
    integrationTestCompile configurations.testCompile
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testRuntime
    functionalTestCompile sourceSets.main.output
    functionalTestCompile configurations.testCompile
    functionalTestCompile sourceSets.test.output
    functionalTestCompile configurations.testRuntime
}

// fixing http://issues.gradle.org/browse/GRADLE-1682
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}